# Generated by Django 2.1.3 on 2018-11-18 14:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Backup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Container',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('hostname', models.CharField(max_length=255, unique=True)),
                ('ram', models.IntegerField()),
                ('disk_size', models.IntegerField()),
                ('cpus', models.CharField(max_length=16)),
                ('state', models.CharField(choices=[('CREATING', 'CREATING'), ('STOPPING', 'STOPPING'), ('STOPPED', 'STOPPED'), ('STARTING', 'STARTING'), ('RUNNING', 'RUNNING'), ('REBOOTING', 'REBOOTING'), ('DELETING', 'DELETING'), ('BACKING_UP', 'BACKING_UP')], default='CREATING', max_length=16)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('private_ipv4', models.GenericIPAddressField(blank=True, null=True)),
                ('public_ipv4', models.GenericIPAddressField(blank=True, null=True)),
                ('event_id', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContainerEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('type', models.CharField(choices=[('STARTED', 'STARTED'), ('STOPPED', 'STOPPED'), ('REBOOTED', 'REBOOTED'), ('PASSWORD_RESET', 'PASSWORD_RESET')], max_length=16)),
                ('container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='compute.Container')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DiskSize',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('size', models.IntegerField(db_index=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('hostname', models.CharField(max_length=255, unique=True)),
                ('ram', models.IntegerField()),
                ('disk_size', models.IntegerField()),
                ('num_cpus', models.IntegerField()),
                ('public_ipv4', models.GenericIPAddressField()),
                ('lvm_vgname', models.CharField(max_length=255)),
                ('default_cpus', models.CharField(max_length=16)),
                ('ssh_port_add', models.IntegerField(default=5000)),
                ('endpoint', models.CharField(max_length=300, null=True)),
                ('backup_path', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('name', models.CharField(max_length=255)),
                ('version', models.CharField(max_length=32)),
                ('image_url', models.ImageField(blank=True, null=True, upload_to='')),
                ('lxc_template_name', models.CharField(choices=[('ubuntu', 'ubuntu'), ('centos', 'centos')], max_length=32)),
                ('lxc_template_args', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RamSize',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('size', models.IntegerField(db_index=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='container',
            name='host',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compute.Host'),
        ),
        migrations.AddField(
            model_name='container',
            name='image',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compute.Image'),
        ),
        migrations.AddField(
            model_name='container',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='containers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='backup',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backups', to='compute.Container'),
        ),
    ]
